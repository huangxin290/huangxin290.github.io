(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{453:function(e,v,_){"use strict";_.r(v);var t=_(2),i=Object(t.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h2",{attrs:{id:"es6-的新特性有哪些"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#es6-的新特性有哪些"}},[e._v("#")]),e._v(" ES6 的新特性有哪些？")]),e._v(" "),v("ol",[v("li",[e._v("声明块级作用域的变量。let 和 const 声明变量的方式，取代了 var 关键字。")]),e._v(" "),v("li",[e._v("箭头函数（Arrow Function），简化了函数的书写方式，this指向"),v("code",[e._v("定义时")]),e._v("包含它的"),v("code",[e._v("最近一层非箭头函数")]),e._v("上下文的this值。。")]),e._v(" "),v("li",[e._v("模板字符串（Template String），允许在字符串中使用变量和表达式，而不需要使用字符串连接符号 "),v("strong",[e._v("`${}`")])]),e._v(" "),v("li",[e._v("解构赋值（Destructuring Assignment），允许从数组和对象中提取值并赋值给变量。"),v("code",[e._v("const {x, y, z} = obj;")])]),e._v(" "),v("li",[e._v("默认参数（Default Parameter），在定义函数时可以给参数设置默认值。"),v("code",[e._v("function func1(a = 1)")])]),e._v(" "),v("li",[e._v("扩展操作符（Spread Operator），可以在函数调用时展开数组或对象。"),v("code",[e._v("func1(...obj)")])]),e._v(" "),v("li",[e._v("类（Class），引入了面向对象编程中类的概念。")]),e._v(" "),v("li",[e._v("模块化（Module），提供了一种组织代码的方式，可以将代码分割成独立的模块，方便重用和维护")]),e._v(" "),v("li",[e._v("Promise，用于处理异步操作，避免回调地狱的问题。")]),e._v(" "),v("li",[e._v("for…of 循环，用于遍历可迭代对象（如数组、Map 和 Set）中的元素。"),v("code",[e._v("for (element of iterable)")]),e._v("，对于Map元素是"),v("code",[e._v("for (let [key, value] of map)")])]),e._v(" "),v("li",[e._v("Symbol，引入了一种新的数据类型，用于创建唯一的属性键。")]),e._v(" "),v("li",[e._v("Map 和 Set，引入了两种新的数据结构，分别用于存储键值对和唯一值。")]),e._v(" "),v("li",[e._v("Proxy，允许在对象和函数调用等操作前后添加自定义的行为。")]),e._v(" "),v("li",[e._v("Reflect，提供了一组可以操作对象的内置方法，可以替代一些对象方法（如 Object.defineProperty）的实现。")]),e._v(" "),v("li",[e._v("Promise.allSettled，用于处理多个 Promise 的状态并返回一个包含每个 Promise 状态的数组。")])]),e._v(" "),v("h2",{attrs:{id:"说一些你经常用到的数组的方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#说一些你经常用到的数组的方法"}},[e._v("#")]),e._v(" 说一些你经常用到的数组的方法")]),e._v(" "),v("ul",[v("li",[e._v("splice(index, deleteCount, ...newAddEl) 在指定索引处删除若干个元素然后加入一些元素")]),e._v(" "),v("li",[e._v("join(separator?: string) 以指定连接符连接数组的元素")]),e._v(" "),v("li",[e._v("filter((current, index)=>{}) 筛选符合条件的元素")]),e._v(" "),v("li",[e._v("find 找到第一个符合条件的元素")]),e._v(" "),v("li",[e._v("findIndex 找到第一个符合条件的元素的索引")]),e._v(" "),v("li",[e._v("concat 连接多个数组")]),e._v(" "),v("li",[e._v("map，forEach，reduce 遍历数组")]),e._v(" "),v("li",[e._v("push，pop 在末尾插入删除")]),e._v(" "),v("li",[e._v("shift，unshift 在开头删除插入")]),e._v(" "),v("li",[e._v("some 是否有部分符合条件")]),e._v(" "),v("li",[e._v("sort 排序，reverse 反转")])]),e._v(" "),v("h2",{attrs:{id:"前端优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端优化"}},[e._v("#")]),e._v(" 前端优化")]),e._v(" "),v("ol",[v("li",[e._v("避免过多的回流和重绘")])])])}),[],!1,null,null,null);v.default=i.exports}}]);